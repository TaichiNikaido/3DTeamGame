//=============================================================================
//
// コンティニューボタン [button_continue.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "manager.h"
#include "mode_game.h"
#include "renderer.h"
#include "sound.h"
#include "button_continue.h"
#include "player.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CContinueButton::CContinueButton()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CContinueButton::~CContinueButton()
{
}

//=============================================================================
// 生成処理関数呼び出し
//=============================================================================
CContinueButton * CContinueButton::Create(D3DXVECTOR3 Position)
{
	//コンティニューボタンのポインタ
	CContinueButton * pContinueButton = NULL;
	//コンティニューボタンのポインタがNULLの場合
	if (pContinueButton == NULL)
	{
		//コンティニューボタンのメモリ確保
		pContinueButton = new CContinueButton;
		//コンティニューボタンのポインタがNULLではない場合
		if (pContinueButton != NULL)
		{
			//コンティニューボタンの位置設定
			pContinueButton->SetPosition(Position);
			//コンティニューボタンの初期化処理関数呼び出し
			pContinueButton->Init();
		}
	}
	//コンティニューボタンのポインタを返す
	return pContinueButton;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CContinueButton::Init(void)
{
	//ボタンの初期化処理関数呼び出し
	CButton::Init();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CContinueButton::Uninit(void)
{
	//ボタンの終了処理関数呼び出し
	CButton::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CContinueButton::Update(void)
{
	//ボタンの更新処理関数呼び出し
	CButton::Update();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CContinueButton::Draw(void)
{
	//ボタンの描画処理関数呼び出し
	CButton::Draw();
}

//=============================================================================
// プレス処理関数
//=============================================================================
void CContinueButton::Press(void)
{
	//プレイヤーの取得
	CPlayer * pPlayer = CGameMode::GetPlayer();
	//サウンドの取得
	CSound * pSound = CManager::GetSound();
	//もしサウンドのポインタがNULLじゃない場合
	if (pSound != NULL)
	{
		//決定音の再生
		pSound->PlaySoundA(CSound::SOUND_LABEL_SE_BUTTON_PUSH);
	}
	//もしプレイヤーのポインタがNULLじゃない場合
	if (pPlayer != NULL)
	{
		//プレイヤーのコンティニューをtrueにする
		pPlayer->SetContinue(true);
	}
}
