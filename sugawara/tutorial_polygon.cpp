//******************************************************************************
// チュートリアルポリゴン [tutrial_polygon.cpp]
// Author : 管原　司
//******************************************************************************
//******************************************************************************
// インクルードファイル
//******************************************************************************
#include "sound.h"
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "scene.h"
#include "scene2d.h"
#include "polygon.h"
#include "tutorial_polygon.h"
//******************************************************************************
// マクロ定義
//******************************************************************************
#define SIZE	(D3DXVECTOR3(SCREEN_WIDTH / 2,SCREEN_HEIGHT / 2,0.0f))
#define COL		(D3DXCOLOR(1.0f,1.0f,1.0f,1.0f))
//******************************************************************************
// コンストラクタ
//******************************************************************************
CTutorial_Polygon::CTutorial_Polygon(int nPriority) : CPolygon(nPriority)
{
}
//******************************************************************************
// デストラクタ
//******************************************************************************
CTutorial_Polygon::~CTutorial_Polygon()
{
}
//******************************************************************************
// 生成関数
//******************************************************************************
CTutorial_Polygon * CTutorial_Polygon::Create(D3DXVECTOR3 pos)
{
	//　CTitle_Polygonクラスのポインタ
	CTutorial_Polygon *pTutorial_Polygonn;

	// メモリ確保
	pTutorial_Polygonn = new CTutorial_Polygon;

	// 情報設定
	pTutorial_Polygonn->SetPolygon(pos, SIZE, COL, CPolygon::TEX_TYPE_RESULT);

	// 初期化
	pTutorial_Polygonn->Init();

	// ポインタを返す
	return pTutorial_Polygonn;

}
//******************************************************************************
// 初期化関数
//******************************************************************************
HRESULT CTutorial_Polygon::Init()
{
	//　初期化
	CPolygon::Init();

	return S_OK;
}
//******************************************************************************
// 終了関数
//******************************************************************************
void CTutorial_Polygon::Uninit(void)
{
	//　終了
	CPolygon::Uninit();
}
//******************************************************************************
// 更新関数
//******************************************************************************
void CTutorial_Polygon::Update(void)
{
	//　更新
	CPolygon::Update();
}
//******************************************************************************
// 描画関数
//******************************************************************************
void CTutorial_Polygon::Draw(void)
{
	//　描画
	CPolygon::Draw();
}